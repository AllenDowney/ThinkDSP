<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="4.3.2_0_6a661c5e" segtype="paragraph" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="EN-US">
        <seg>All of the code is written to work in both Python 2 and Python 3 with no translation.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T191342Z" creationid="userone" creationdate="20200526T191342Z">
        <seg>모든 코드는 변환 없이 Python 2와 Python 3 모두에서 작동하도록 작성되었습니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although these are commonly used packages, they are not included with all Python installations, and they can be hard to install in some environments. If you have trouble installing them, I recommend using Anaconda or one of the other Python distributions that include these packages.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T191653Z" creationid="userone" creationdate="20200526T191653Z">
        <seg>이들은 일반적으로 사용되는 패키지이지만 모든 Python 설치에 포함되어 있지는 않으며, 일부 환경에서는 설치하기가 어려울 수 있습니다. 설치에 문제가 있으면 Anaconda 또는 이 패키지들이 포함 된 다른 Python 배포판 중 하나를 사용하는 것이 좋습니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before I started writing, my thoughts about this book benefited from conversations with Boulos Harb at Google and Aurelio Ramos, formerly at Harmonix Music Systems.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T194952Z" creationid="userone" creationdate="20200526T194952Z">
        <seg>책을 쓰기 시작하기 전에, 이 책에 대한 나의 생각은 Google의 Boulos Harb와 Harmonix Music Systems에서 일하던 Aurelio Ramos와의 대화를 통해 떠올릴 수 있었습니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Binder is a service that runs Jupyter in a virtual machine. If you follow this link, &lt;u0&gt;{http://mybinder.org/repo/AllenDowney/ThinkDSP}, you should get a Jupyter home page with the notebooks for this book and the supporting data and scripts.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T192129Z" creationid="userone" creationdate="20200526T192129Z">
        <seg>Binder는 가상 머신에서 Jupyter를 실행하는 서비스입니다. 이 링크&lt;u0&gt;{http://mybinder.org/repo/AllenDowney/ThinkDSP}에 들어가면, 이 책의 노트와 지원 데이터 및 스크립트가 포함 된 Jupyter 홈 페이지를 받을 수 있을 것입니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But unless you studied electrical or mechanical engineering, you probably haven't had a chance to learn about signal processing. The problem is that most books (and the classes that use them) present the material bottom-up, starting with mathematical abstractions like phasors. And they tend to be theoretical, with few applications and little apparent relevance.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T182251Z" creationid="userone" creationdate="20200526T181051Z">
        <seg>그러나 전기 공학이나 기계 공학을 공부하지 않았다면 아마도 신호 처리에 대해 배울 기회가 없었을 것입니다. 문제는 바로 대부분의 서적(그리고 이를 사용하는 수업)이 페이저와 같은 수학적 추상화로 시작하여 내용을 아래에서 위로 배운다는 것입니다. 그리고 응용이나 명백한 관련성이 거의 없고 이론적으로 가르치는 경향이 있습니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contributor List</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T194052Z" creationid="userone" creationdate="20200526T194052Z">
        <seg>기여자 목록</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>During the Fall 2013 semester, Nathan Lintz and Ian Daniher worked with me on an independent study project and helped me with the first draft of this book.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T195035Z" creationid="userone" creationdate="20200526T195035Z">
        <seg>2013년 가을 학기 동안 Nathan Lintz와 Ian Daniher는 저와 함께 독립적인 연구 프로젝트를 진행했으며 이 책의 초안 작성을 도와주었습니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Eric Peters sent many helpful suggestions.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T195149Z" creationid="userone" creationdate="20200526T195149Z">
        <seg>Eric Peters는 많은 유용한 제안을 보냈습니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Giuseppe Masetti sent a number of very helpful suggestions.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T195147Z" creationid="userone" creationdate="20200526T195147Z">
        <seg>Giuseppe Masetti는 매우 유용한 제안을 많이 보냈습니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Good luck, and have fun!</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T194048Z" creationid="userone" creationdate="20200526T194048Z">
        <seg>행운을 빕니다, 그리고 즐기세요!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I assume that the reader knows basic mathematics, including complex numbers. You don't need much calculus; if you understand the concepts of integration and differentiation, that will do. I use some linear algebra, but I will explain it as we go along.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T183750Z" creationid="userone" creationdate="20200526T183734Z">
        <seg>여기서는 독자가 복소수를 포함한 기본 수학을 알고 있다고 가정합니다. 많은 미적분이 필요하지 않습니다. 미분과 적분의 개념을 이해한다면 그걸로 될 것입니다. 선형대수학도 이용하지만, 관련 내용을 다룰 때 설명할 것입니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I developed this book using Anaconda from Continuum Analytics, which is a free Python distribution that includes all the packages you'll need to run the code (and lots more). I found Anaconda easy to install. By default it does a user-level installation, not system-level, so you don't need administrative privileges. And it supports both Python 2 and Python 3. You can download Anaconda from &lt;u0&gt;{https://www.anaconda.com/distribution/}.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T191546Z" creationid="userone" creationdate="20200526T191546Z">
        <seg>Continuum Analytics의 Anaconda를 사용하여 이 책의 코드를 개발했습니다. Continuum Analytics는 코드를 실행하는 데 필요한 모든 패키지가 포함 된 무료 Python 배포판입니다. Anaconda가 설치하기 쉽다는 것을 알았습니다. 기본적으로 시스템 수준이 아닌 사용자 수준 설치를 수행하므로 관리자 권한이 필요하지 않습니다. 또한 Python 2와 Python 3을 모두 지원합니다. Anaconda는 여기서 다운로드 할 수 있습니다&lt;u0&gt;{https://www.anaconda.com/distribution/}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I use NumPy and SciPy extensively. If you are familiar with them already, that's great, but I will also explain the functions and data structures I use.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T183623Z" creationid="userone" creationdate="20200526T183508Z">
        <seg>이 책에서는 NumPy와 SciPy를 광범위하게 사용합니다. 이미 잘 알고 있다면 훌륭합니다. 그렇지만 사용하는 함수와 데이터 구조에 대해서도 설명하겠습니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it's not installed, you can install it in Anaconda like this</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T191939Z" creationid="userone" creationdate="20200526T191939Z">
        <seg>설치되어 있지 않으면 다음과 같이 Anaconda에 설치할 수 있습니다</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are not already familiar with Python, you might want to start with my other book, {&lt;u0&gt; Think Python}, which is an introduction to Python for people who have never programmed, or Mark Lutz's {&lt;u1&gt; Learning Python}, which might be better for people with programming experience.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T183438Z" creationid="userone" creationdate="20200526T183154Z">
        <seg>아직 Python에 익숙하지 않은 경우 저의 다른 책 {&lt;u0&gt; Think Python}, (프로그래밍을 해 본 적이 없는 사람들을 위한 Python 기초)  또는 Mark Lutz의 {&lt;u1&gt; Learning Python} (프로그래밍 경험이있는 사람들에게 더욱 좋음)으로 시작해 보는 것도 좋습니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't want to use Anaconda, you will need the following packages:</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T191558Z" creationid="userone" creationdate="20200526T191558Z">
        <seg>Anaconda를 사용하지 않으려면 다음 패키지가 필요합니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't want to use Git at all, you can download the files in a Zip file using the button in the lower-right corner of the GitHub page.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T191318Z" creationid="userone" creationdate="20200526T191318Z">
        <seg>Git을 전혀 사용하지 않으려면 GitHub 페이지의 오른쪽 하단에 있는 버튼을 사용하여 Zip 파일로 다운로드 할 수 있습니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have a suggestion or correction, please send email to {&lt;u0&gt; downey@allendowney.com}. If I make a change based on your feedback, I will add you to the contributor list (unless you ask to be omitted).</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T194748Z" creationid="userone" creationdate="20200526T194744Z">
        <seg>제안이나 수정 사항이 있으면 {&lt;u0&gt; downey@allendowney.com}으로 이메일을 보내 주세요. 만약 당신의 의견에 따라 변경하게 되면, 기여자 목록에 추가할 것입니다 (원하지 않는 경우 제외).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you include at least part of the sentence the error appears in, that makes it easy for me to search. Page and section numbers are fine, too, but not as easy to work with. Thanks!</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T194845Z" creationid="userone" creationdate="20200526T194845Z">
        <seg>적어도 오류가 나는 문장의 일부를 포함시키면 제가 쉽게 찾을 수 있습니다. 페이지 및 섹션 번호로 알려주셔도 가능하지만 작업하기 쉽지 않습니다. 감사합니다!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you installed Anaconda, you probably got Jupyter by default. To check, start the server from the command line, like this:</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T191929Z" creationid="userone" creationdate="20200526T191830Z">
        <seg>Anaconda를 설치 한 경우 기본적으로 Jupyter가 설치되었을 것입니다. 확인하려면 다음과 같이 커맨드 라인에서 서버를 시작하십시오.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Spring 2015 I had the pleasure of teaching this material along with Prof. Oscar Mur-Miranda and Prof. Siddhartan Govindasamy. Both made many suggestions and corrections.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T195134Z" creationid="userone" creationdate="20200526T195134Z">
        <seg>2015년 봄, 저는 이 자료를 Oscar Mur-Miranda 교수 및 Siddhartan Govindasamy 교수와 함께 즐겁게 가르쳤습니다. 둘 다 많은 제안과 수정을 했습니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this chapter I claim that {&lt;u0&gt; analyze1} takes time proportional to $n^3$ and {&lt;u1&gt; analyze2} takes time proportional to $n^2$. To see if that's true, run them on a range of input sizes and time them. In Jupyter, you can use the ``magic command'' &lt;u2&gt;"</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T184316Z" creationid="userone" creationdate="20200526T184126Z">
        <seg>이 장에서 우리는 {&lt;u0&gt; analytics1}은 $ n ^ 3 $ 에 비례하고 {&lt;u1&gt; analyze2}는 시간이 $ n ^ 2 $에 비례한다고 볼 것입니다. 이것이 사실인지 확인하려면 입력 크기 범위에서 실행하고 시간을 지정하십시오. Jupyter에서는``magic command ''를 사용할 수 있습니다 &lt;u2&gt;"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most exercises use Python scripts, but some also use Jupyter notebooks. If you have not used Jupyter before, you can read about it at &lt;u0&gt;{http://jupyter.org}.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T191717Z" creationid="userone" creationdate="20200526T191717Z">
        <seg>대부분의 연습문제는 Python 스크립트를 사용하지만 일부는 Jupyter 노트북도 사용합니다. Jupyter를 사용해 본 적이 없는 경우 다음에서 읽을 수 있습니다. &lt;u0&gt;{http://jupyter.org}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>NumPy for basic numerical computation, &lt;u1&gt;{http://www.numpy.org/};</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T191603Z" creationid="userone" creationdate="20200526T191603Z">
        <seg>기본 수치 계산을 위한 NumPy &lt;u1&gt;{http://www.numpy.org/};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On Reddit's DSP forum, the anonymous user RamjetSoundwave helped me fix a problem with my implementation of Brownian Noise. And andodli found a typo.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T195050Z" creationid="userone" creationdate="20200526T195050Z">
        <seg>Reddit의 DSP 포럼에서 익명의 사용자 RamjetSoundwave는 Brownian Noise 구현 문제를 해결하는 데 도움을 주었습니다. 그리고 Andodli는 오타를 발견했습니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or you could clone my repository. You don't need a GitHub account to do this, but you won't be able to write your changes back to GitHub.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T191256Z" creationid="userone" creationdate="20200526T191256Z">
        <seg>또는 저자의 저장소를 복제할 수 있습니다. 이를 위해 GitHub 계정이 필요하지는 않지만 변경 사항을 GitHub에 다시 쓸 수는 없습니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SciPy for scientific computation, &lt;u1&gt;{http://www.scipy.org/};</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T191613Z" creationid="userone" creationdate="20200526T191613Z">
        <seg>과학적인 계산을 위한 SciPy &lt;u1&gt;{http://www.scipy.org/};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Signal processing is one of my favorite topics. It is useful in many areas of science and engineering, and if you understand the fundamental ideas, it provides insight into many things we see in the world, and especially the things we hear.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T182232Z" creationid="userone" creationdate="20200526T180913Z">
        <seg>신호 처리는 제가 가장 좋아하는 주제 중 하나입니다. 그것은 많은 과학 및 공학 분야에서 유용하며, 기본 아이디어를 이해하면 세계에서 우리가 보는 많은 것들, 특히 우리가 듣는 것들에 대한 통찰력을 제공합니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Silas Gyger corrected an arithmetic error.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T195143Z" creationid="userone" creationdate="20200526T195143Z">
        <seg>Silas Gyger가 산술적인 오류를 수정했습니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Special thanks to Freesound, which is the source of many of the sound samples I use in this book, and to the Freesound users who uploaded those sounds. I include some of their wave files in the GitHub repository for this book, using the original file names, so it should be easy to find their sources.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T195250Z" creationid="userone" creationdate="20200526T195250Z">
        <seg>이 책에서 사용하는 많은 사운드 샘플의 출처인 Freesound와 그 사운드를 업로드한 Freesound 사용자들에게 특히 감사드립니다. 원본 파일 이름을 사용하여이 책의 GitHub 저장소에 일부 웨이브 파일을 포함해 두었으므로 출처를 쉽게 찾을 수 있습니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The GitHub homepage for my repository provides several ways to work with the code:</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T185423Z" creationid="userone" creationdate="20200526T185423Z">
        <seg>제 저장소의 GitHub 홈페이지는 코드 작업을 위한 몇 가지 방법을 제공합니다:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code and sound samples used in this book are available from &lt;u0&gt;{https://github.com/AllenDowney/ThinkDSP}. Git is a version control system that allows you to keep track of the files that make up a project. A collection of files under Git's control is called a ''repository''. GitHub is a hosting service that provides storage for Git repositories and a convenient web interface.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T185243Z" creationid="userone" creationdate="20200526T185243Z">
        <seg>이 책에 사용 된 코드 및 사운드 샘플은 &lt;u0&gt;{https://github.com/AllenDowney/ThinkDSP}에 있습니다. Git은 프로젝트를 구성하는 파일들을을 추적할 수 있게 해 주는 버전 관리 시스템입니다. Git이 관리하는 파일 모음을 ''저장소''라고 합니다. GitHub는 Git 저장소를 위한 스토리지와 편리한 웹 인터페이스를 제공하는 호스팅 서비스입니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code and sound samples used in this book are available from &lt;u0&gt;{https://github.com/AllenDowney/ThinkDSP}. Git is a version control system that allows you to keep track of the files that make up a project. A collection of files under Git's control is called a ``repository''. GitHub is a hosting service that provides storage for Git repositories and a convenient web interface.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T185143Z" creationid="userone" creationdate="20200526T185143Z">
        <seg>이 책에 사용 된 코드 및 사운드 샘플은 &lt;u0&gt;{https://github.com/AllenDowney/ThinkDSP}에 있습니다. Git은 프로젝트를 구성하는 파일을 추적할 수 있는 버전 관리 시스템입니다. Git이 제어하는 파일 모음을``저장소 ''라고합니다. GitHub는 Git 리포지토리를위한 스토리지와 편리한 웹 인터페이스를 제공하는 호스팅 서비스입니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The examples and supporting code for this book are in Python. You should know core Python and you should be familiar with object-oriented features, at least using objects if not defining your own.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T182919Z" creationid="userone" creationdate="20200526T182919Z">
        <seg>이 책의 예제와 지원 코드는 Python입니다. 핵심적인 Python에 대해 알고 있어야 하며, 객체를 정의하지 않더라도 어느 정도 객체 지향적 기능들에 익숙해야 합니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The premise of this book is that if you know how to program, you can use that skill to learn other things, and have fun doing it.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T182459Z" creationid="userone" creationdate="20200526T182459Z">
        <seg>이 책의 전제는 프로그래밍을 할 줄 안다면 그 기술을 이용해서 다른 것을 배우는 데 쓸 수 있게 되는 것이고, 그렇게 하는데 즐거움을 느끼는 것입니다 .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are three ways you can work with the Jupyter notebooks:</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T191900Z" creationid="userone" creationdate="20200526T191827Z">
        <seg>다음은 Jupyter 노트북으로 작업하는 세 가지 방법입니다:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This approach is more practical and, I hope you'll agree, more fun.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T183610Z" creationid="userone" creationdate="20200526T182731Z">
        <seg>이 방법은 더 실용적입니다. 그리고, 더 재미있다고 느끼기를 바랍니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the code</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T183758Z" creationid="userone" creationdate="20200526T183758Z">
        <seg>코드 사용하기</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When we refer to notebooks later in the book, we will provide links to nbviewer, which provides a static view of the code and results. You can use these links to read the notebooks and listen to the examples, but you won't be able to modify or run the code, or use the interactive widgets.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T194013Z" creationid="userone" creationdate="20200526T194013Z">
        <seg>이 책의 후반부에있는 노트북을 참조할 때, 코드와 결과를 정적으로 볼 수 있는 nbviewer에 대한 링크를 제공할 것입니다. 이 링크를 사용하여 노트북을 읽고 예제를 들을 수 있지만 코드를 수정하거나 실행하거나 대화식 위젯을 사용할 수는 없습니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you start the server, it should launch your default web browser or create a new tab in an open browser window.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T192020Z" creationid="userone" creationdate="20200526T192020Z">
        <seg>서버를 시작할 때 주피터 노트북이 기본 웹 브라우저를 시작하거나 열린 브라우저 창에서 새 탭을 만들어야 합니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Who is this book for?</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T182741Z" creationid="userone" creationdate="20200526T182741Z">
        <seg>누구를 위한 책인가요?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With a programming-based approach, I can present the most important ideas right away. By the end of the first chapter, you can analyze sound recordings and other signals, and generate new sounds. Each chapter introduces a new technique and an application you can apply to real signals. At each step you learn how to use a technique first, and then how it works.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T182704Z" creationid="userone" creationdate="20200526T182704Z">
        <seg>프로그래밍 기반 접근 방식을 통해서, 이 책은 가장 중요한 아이디어들을 바로 보여줄 수 있습니다. 첫 장이 끝날 무렵에는 녹음된 소리와 기타 신호를 분석하고 새로운 소리를 생성할 수 있게 될 것입니다. 각 장에서는 실제 신호에 적용할 수있는 새로운 테크닉과 그 응용을 소개합니다. 각 단계에서 먼저 테크닉을 이용하는 방법과 그 원리를 배웁니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can create a copy of my repository on GitHub by pressing the {&lt;u1&gt; Fork} button. If you don't already have a GitHub account, you'll need to create one. After forking, you'll have your own repository on GitHub that you can use to keep track of code you write while working on this book. Then you can clone the repo, which means that you copy the files to your computer.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T185730Z" creationid="userone" creationdate="20200526T185535Z">
        <seg>{&lt;u1&gt; Fork} 버튼을 눌러 GitHub에서 저장소 사본을 만들 수 있습니다. 아직 GitHub 계정이 없다면, 계정을 만들어야 합니다. fork 후에는 GitHub에이 책에서 작업하는 동안 작성한 코드를 트래킹하는 데 사용할 수 있는 자체 저장소를 갖게 될 것입니다. 그런 다음 저장소를 clone 할 수 있습니다. 즉, 파일을 컴퓨터에 복사합니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can run the scripts and modify them to run your own code, but the virtual machine you run in is temporary. Any changes you make will disappear, along with the virtual machine, if you leave it idle for more than about an hour.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T193908Z" creationid="userone" creationdate="20200526T193854Z">
        <seg>스크립트를 실행하거나 자신의 코드를 실행하도록 수정할 수 있지만 실행하는 가상 머신은 임시입니다. 약 1 시간 이상 유휴 상태로 두면 변경 내용이 가상 시스템과 함께 사라집니다.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[Run Jupyter on Binder]</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T192036Z" creationid="userone" creationdate="20200526T192027Z">
        <seg>[Binder에서 Jupyter 실행하기]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[View notebooks on nbviewer]</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T193926Z" creationid="userone" creationdate="20200526T193926Z">
        <seg>[nbviewer에서 notebook들 보기]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>matplotlib for visualization, &lt;u1&gt;{http://matplotlib.org/}.</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T191618Z" creationid="userone" creationdate="20200526T191618Z">
        <seg>시각화를 위한 matplotlib, &lt;u1&gt;{http://matplotlib.org/}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>repository</seg>
      </tuv>
      <tuv lang="KO" changeid="userone" changedate="20200526T183850Z" creationid="userone" creationdate="20200526T183850Z">
        <seg>repository(저장소)</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
